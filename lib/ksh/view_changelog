#! ksh

function view_changelog {

    # Collect command line arguments and make sure we have a file to process
    typeset cfile=$1; [[ -n $1 && -f $1 && -r $1 ]] || return

    # Assert that we have the right tools to parse and display the change log
    whence -q df-y2k || clog +fatal 'The \E[32;4mAIT framework\E[0m has not been installed!'
    whence -q glow   || clog +fatal 'Cannot locate the \E[33mglow(1)\E[0m utility.'

    # Load the YAML change log file and convert it to KAML
    eval "$(df-y2k -p kaml $cfile)"

    # Initialise defaultds
    typeset clog todo; nameref journal=kaml.changelog

    # Process all entries in our change log
    integer entries=${#journal[@]} i; for (( i = 0; i < entries; ++ i )); do

        # Determine the date (strip date if it contains the !!wip marker)
        nameref entry=journal[$i]; typeset date=; [[ ${entry.date} == *!!wip ]] || date="${entry.date}"

        # If we have changes, collect them
        if [[ -n ${entry.notes} || -n ${entry.edit} || -n ${entry.more} || -n ${entry.less} ]]; then
            typeset backup="$clog"
            clog="# ${date:-Work in progress}\n\n"
            [[ -n ${entry.notes} ]] && clog+="${entry.notes}\n"
            [[ -n ${entry.edit}  ]] && clog+="## Changes\n\n${entry.edit}\n"
            [[ -n ${entry.more}  ]] && clog+="## Additions\n\n${entry.more}\n"
            [[ -n ${entry.less}  ]] && clog+="## Deletions\n\n${entry.less}\n"
            [[ -n $backup        ]] && clog+="\n\n$backup"
            unset backup
        fi

        # Likewise if we have todo items, collect them
        [[ -n ${entry.todo} ]] && todo="## ${date:-Recently}\n\n${entry.todo}${todo:+\n\n$todo}"

    done

    # We're done parsing and loading... let's display the result
    print "$clog${todo:+\n\n# Things todo\n\n$todo}" | glow -

}

# __END__
